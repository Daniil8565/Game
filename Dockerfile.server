# ARG NODE_VERSION=20
# ARG SERVER_PORT=3001

# FROM node:$NODE_VERSION-buster as base

# WORKDIR /app

# FROM base as builder

# COPY package.json yarn.lock ./
# RUN yarn install --frozen-lockfile

# COPY . .

# RUN yarn lerna bootstrap
# RUN rm -rf /app/packages/server/dist/ && yarn build --scope=server


# FROM node:$NODE_VERSION-buster-slim as production
# WORKDIR /app

# COPY --from=builder /app/packages/server/dist/ /app/
# COPY --from=builder /app/packages/server/package.json /app/package.json
# RUN yarn install --production=true

# EXPOSE $SERVER_PORT
# CMD [ "node", "/app/index.js" ]



# ниже когда работало ________________________
# Определяем аргументы для версии Node.js и порта
# ARG NODE_VERSION=20
# ARG SERVER_PORT=3001

# # Базовый образ с Node.js
# FROM node:$NODE_VERSION-buster AS base

# # Устанавливаем рабочую директорию
# WORKDIR /app

# # Этап сборки
# FROM base AS builder

# # Копируем файлы зависимостей
# COPY package.json yarn.lock ./
# RUN yarn install --frozen-lockfile # Устанавливаем зависимости

# # Копируем весь проект
# COPY . .

# # Выполняем сборку с Lerna
# RUN yarn lerna bootstrap
# RUN rm -rf /app/packages/server/dist/ && yarn build --scope=server

# # Производственный образ
# FROM node:$NODE_VERSION-buster-slim AS production
# WORKDIR /app

# # Копируем собранные файлы
# COPY --from=builder /app/packages/server/dist/ /app/
# COPY --from=builder /app/packages/server/package.json /app/package.json
# RUN yarn install --production=true # Устанавливаем только продакшен-зависимости

# # Экспонируем порт
# EXPOSE $SERVER_PORT
# CMD [ "node", "/app/index.js" ] # Запускаем сервер
# ____________________________________

# Определяем аргументы для версии Node.js и порта
ARG NODE_VERSION=20
ARG SERVER_PORT=3001

# Базовый образ с Node.js
FROM node:$NODE_VERSION-buster AS base

# Устанавливаем рабочую директорию
WORKDIR /app

# Этап сборки
FROM base AS builder

# Копируем файлы зависимостей
COPY package.json yarn.lock ./
RUN yarn install --frozen-lockfile

# Копируем весь проект
COPY . .

# Выполняем сборку с Lerna
RUN yarn lerna bootstrap
RUN rm -rf /app/packages/server/dist/ && yarn build --scope=server || (echo "Build failed, check logs" && exit 1)

# Производственный образ
FROM node:$NODE_VERSION-buster-slim AS production
WORKDIR /app

# Копируем собранные файлы и зависимости
COPY --from=builder /app/packages/server/dist/ /app/
COPY --from=builder /app/packages/server/package.json /app/package.json
COPY --from=builder /app/node_modules/ /app/node_modules/ 
# Копируем все зависимости

# Экспонируем порт
EXPOSE $SERVER_PORT
CMD [ "node", "/app/index.js" ]